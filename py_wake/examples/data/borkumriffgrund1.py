import numpy as np
from py_wake.site._site import UniformWeibullSite
from py_wake.wind_turbines import OneTypeWindTurbines
import matplotlib.pyplot as plt


G = [(53.994306,	6.491222),
(53.987583,	6.49125),
(53.980833,	6.49125),
(53.974111,	6.491278)]


H = [(53.994333,	6.502667),
(53.987583,	6.502667),
(53.980861,	6.502694),
(53.974111,	6.502694),
(53.967361,	6.502722)]

I=[(53.994333,	6.514083),
(53.987583,	6.514111),
(53.980861,	6.514111),
(53.974111,	6.514139),
(53.967389,	6.514139),
(53.960639,	6.514167)]

J=[(53.994333	, 6.525528),
(53.987611	, 6.525556),
(53.980861	, 6.525556),
(53.974139	, 6.525556),
(53.967389	, 6.525583),
(53.960639	, 6.525583),
(53.953917	, 6.525611)]

K=[(53.994361,	6.536972),
(53.987611,	6.536972),
(53.980861,	6.537),
(53.974139,	6.537),
(53.967389,	6.537),
(53.960667,	6.537028),
(53.953917,	6.537028),
(53.947167,	6.537028)]

L =[(53.994361, 6.548417),
(53.987611,	6.548417),
(53.980889,	6.548417),
(53.974139,	6.548417),
(53.967389,	6.548444),
(53.960667,	6.548444),
(53.953917,	6.548444),
(53.947194,	6.548472),
(53.940444,	6.548472)]


M=[(53.994361	, 6.559833),
(53.987611	, 6.559861),
(53.980889	, 6.559861),
(53.974139	, 6.559861),
(53.967428	, 6.559871),
(53.960667	, 6.559861),
(53.953917	, 6.559889),
(53.947194	, 6.559889),
(53.940444	, 6.559889)]

N=[(53.987611	, 6.571278),
(53.980889	, 6.571278),
(53.974139	, 6.571278),
(53.967417	, 6.571306),
(53.960667	, 6.571306),
(53.953917	, 6.571306),
(53.947194	, 6.571306),
(53.940444	, 6.571306)]

O=[(53.980889	, 6.582722),
(53.974139	, 6.582722),
(53.967417	, 6.582722),
(53.960667	, 6.582722),
(53.953917	, 6.582722),
(53.947194	, 6.582722),
(53.940444	, 6.582722)]

P=[(53.974139	, 6.594167),
(53.967417	, 6.594167),
(53.960667	, 6.594167),
(53.953944	, 6.594167),
(53.947194	, 6.594167),
(53.940444	, 6.594167)]

Q=[(53.967417	, 6.605583),
(53.960667	, 6.605583),
(53.953944	, 6.605583),
(53.947194	, 6.605583),
(53.940444	, 6.605583)]

R=[(53.960667	, 6.617),
(53.953917	, 6.617),
(53.947194	, 6.617),
(53.940444	, 6.617)]



G10=[(53.994306, 6.491222),
 (53.98429148333334, 6.491222),
 (53.97427696666667, 6.491222)]

H10=[(53.994306, 6.5081605),
 (53.98429148333334, 6.5081605),
 (53.97427696666667, 6.5081605),
 (53.96426245, 6.5081605)]

I10=[(53.994306, 6.525099),
 (53.98429148333334, 6.525099),
 (53.97427696666667, 6.525099),
 (53.96426245, 6.525099),
 (53.954247933333335, 6.525099)]

J10=[(53.994306, 6.5420375),
 (53.98429148333334, 6.5420375),
 (53.97427696666667, 6.5420375),
 (53.96426245, 6.5420375),
 (53.954247933333335, 6.5420375)]

K10=[(53.994306, 6.558976),
 (53.98429148333334, 6.558976),
 (53.97427696666667, 6.558976),
 (53.96426245, 6.558976),
 (53.954247933333335, 6.558976)]

L10=[(53.98429148333334, 6.5759145000000006),
 (53.97427696666667, 6.5759145000000006),
 (53.96426245000001, 6.5759145000000006),
 (53.954247933333335, 6.5759145000000006)]


M10=[(53.97427696666667, 6.592853000000001),
 (53.96426245000001, 6.592853000000001),
 (53.95424793333334, 6.592853000000001)]


N10=[(53.96426245000001, 6.609791500000001),
 (53.95424793333334, 6.609791500000001)]


wt_x_4MW = [335544.5104408314,
 335519.842486967,
 335493.2352986207,
 335468.57675363147,
 336294.71240481886,
 336268.2240929832,
 336243.6180680277,
 336217.1346184262,
 336192.4897478914,
 337042.90930076607,
 337018.37755720917,
 336992.1223515588,
 336967.5960530924,
 336941.3456799752,
 336916.82482784125,
 337793.00884378003,
 337768.7074444195,
 337742.4643337653,
 337716.33234117023,
 337691.86447773327,
 337665.62846080377,
 337641.34042097605,
 338543.1532188094,
 338517.02900206024,
 338492.7427527333,
 338466.7316980659,
 338440.61455332016,
 338416.44458964025,
 338390.3322571631,
 338364.22218749975,
 339293.25624840235,
 339267.25350373395,
 339241.36085892183,
 339215.362606482,
 339191.1373272739,
 339165.2516843817,
 339139.2604640747,
 339115.2126404665,
 339089.22621324274,
 340041.4605976079,
 340017.41443499055,
 339991.64273629285,
 339965.7659233167,
 339940.69666632323,
 339914.12633791333,
 339890.09314118524,
 339864.32904725685,
 339838.46372083935,
 340765.80746401474,
 340740.15642497526,
 340714.4007638375,
 340690.5904701382,
 340664.83955799404,
 340639.0908769441,
 340613.44740869635,
 340587.70318197215,
 341490.44222744403,
 341464.80800354714,
 341439.2823203579,
 341413.6525274911,
 341388.0249552732,
 341362.502101038,
 341336.87896229234,
 342215.2827654589,
 342189.87801483384,
 342164.3696478179,
 342138.96551120305,
 342113.46155604953,
 342087.95981177466,
 342938.57373915316,
 342913.18648921547,
 342887.90297482663,
 342862.5201158987,
 342837.1394573997,
 343662.0708441633,
 343636.80691010517,
 343611.6462082935,
 343586.3866450848]


wt_y_4MW = [5985801.55835307,
 5985053.711366513,
 5984302.926968069,
 5983555.1925601065,
 5985778.035729041,
 5985027.248624342,
 5984279.514136659,
 5983528.728401059,
 5982777.878588862,
 5985751.698084359,
 5985000.84451495,
 5984253.1704653865,
 5983502.318258768,
 5982754.645575494,
 5982003.794731897,
 5985725.414748837,
 5984977.6738620065,
 5984226.883425094,
 5983479.208065156,
 5982728.357128174,
 5981977.56875777,
 5981229.831275178,
 5985702.369463584,
 5984951.576344033,
 5984200.720051452,
 5983453.042706434,
 5982702.251657426,
 5981954.51180992,
 5981203.7221389655,
 5980452.933160985,
 5985676.328858908,
 5984925.53375222,
 5984177.853744706,
 5983427.060023499,
 5982676.205688759,
 5981928.527747867,
 5981177.736102049,
 5980429.884720874,
 5979679.094456336,
 5985650.475141406,
 5984899.614794147,
 5984151.932818614,
 5983401.137122626,
 5982654.657446415,
 5981902.662222368,
 5981151.805319684,
 5980404.015569404,
 5979653.223341952,
 5984873.877909802,
 5984126.193980124,
 5983375.396323278,
 5982627.650793981,
 5981876.854523761,
 5981126.058950777,
 5980378.267253194,
 5979627.473072046,
 5984100.515488854,
 5983349.715875796,
 5982602.031384979,
 5981851.233166187,
 5981100.4356460525,
 5980352.642010522,
 5979601.845885065,
 5983324.15456842,
 5982576.468140004,
 5981825.667976958,
 5981077.871710449,
 5980327.072944812,
 5979576.274879356,
 5982551.090605202,
 5981800.288512075,
 5981052.490324607,
 5980301.689631702,
 5979550.889640392,
 5981775.027631197,
 5981024.224319947,
 5980276.424920674,
 5979525.623012554]



wt_x_10MW = [335544.5104408314,
 335505.0321444605,
 335465.55891751824,
 336654.64669360366,
 336615.435124676,
 336576.2285910958,
 336537.0270940531,
 337764.7873580189,
 337725.8425128362,
 337686.90266891674,
 337647.9678274424,
 337609.0379895951,
 338874.9324038993,
 338836.2542787882,
 338797.5811208532,
 338758.91293126805,
 338720.24971120665,
 339985.08180107566,
 339946.67039238795,
 339908.2639167863,
 339869.8623754363,
 339831.4657695036,
 341057.0908234952,
 341018.9510266008,
 340980.816129857,
 340942.68613442115,
 342129.64242018026,
 342091.7741644387,
 342053.9107758931,
 343202.7364490989,
 343165.13966386183]

wt_y_10MW = [5985801.55835307,
 5984687.669759096,
 5983573.782677064,
 5985762.343549053,
 5984648.4505157685,
 5983534.558999221,
 5982420.668999578,
 5985723.394588384,
 5984609.49714605,
 5983495.601225218,
 5982381.706826054,
 5981267.813948727,
 5985684.711467389,
 5984570.8096462665,
 5983456.909351375,
 5982343.010582884,
 5981229.113340961,
 5985646.294182424,
 5984532.388012766,
 5983418.483374039,
 5982304.580266409,
 5981190.678690049,
 5984494.232241924,
 5983380.323289579,
 5982266.415872999,
 5981152.509992353,
 5983342.429094389,
 5982228.517399041,
 5981114.607244261,
 5982190.884840953,
 5981076.970442185]



ALL = G+H+I+J+K+L+M+N+O+P+Q+R
ALL10 = G10+H10+I10+J10+K10+L10+M10+N10

wt_lat_4MW = [x[0] for x in ALL]
wt_lon_4MW = [x[1] for x in ALL]
wt_lat_10MW = [x[0] for x in ALL10]
wt_lon_10MW = [x[1] for x in ALL10]

if 0:
    # plt.plot(wt_lon_4MW,wt_lat_4MW,'.')
    # plt.plot(wt_lon_10MW,wt_lat_10MW,'.')
    # plt.xlabel('longitude (deg)')
    # plt.ylabel('latitude (deg)')
    # plt.grid()
    # plt.show()
    def get_line(x0, y0, x1, y1, xmin, xmax):
        a = (y1-y0)/(x1-x0)
        b = y0-a*x0
        return [a*xmin+b,a*xmax+b]
    def get_angle(x0, y0, x1, y1):
        a = (y1-y0)/(x1-x0)
        # b = y0-a*x0
        return np.tan(a)
    
    wt_x_10MW = np.asarray(wt_x_10MW)
    # wt_x_10MW = wt_x_10MW - wt_x_10MW.min()
    # wt_x_10MW = wt_x_10MW/wt_x_10MW.max()
    
    wt_y_10MW = np.asarray(wt_y_10MW)
    # wt_y_10MW = wt_y_10MW - wt_y_10MW.min()
    # wt_y_10MW = wt_y_10MW/wt_x_10MW.max()
    # plt.plot(wt_x_4MW, wt_y_4MW,'.')
    plt.plot(wt_x_10MW, wt_y_10MW,'r.',marker='2')
    # plt.xlabel('easting, x (m')
    # plt.ylabel('northing, y (m)')
    # plt.grid()
    turb = 0
    x0,y0 = wt_x_10MW[turb], wt_y_10MW[turb]
    xmax, ymax = wt_x_10MW.max(), wt_y_10MW.max()
    xmin, ymin = wt_x_10MW.min(), wt_y_10MW.min()
    dx, dy = np.max([abs(xmax-x0), abs(xmin-x0)]), np.max([abs(ymax-y0), abs(ymin-y0)])
    dd = max(dx, dy)
    image_name = 'borkum_turb0_polar.png'
    im = plt.imread(image_name)
    implot = plt.imshow(im,extent=(x0-dd,x0+dd,y0-dd,y0+dd))
    plt.xlim([x0-dd,x0+dd])
    plt.ylim([y0-dd,y0+dd])
    plt.axis('off')
    # plt.axis('scaled')
    plt.gca().set_aspect('equal')
    plt.draw()
    angle_list = []
    angles = [1,3, 4,5,7, 8]
    for n in range(wt_x_10MW.size-1):
        if not n == turb:
            if n in angles:
                y = get_line(x0, y0, wt_x_10MW[n], wt_y_10MW[n], x0-dd, x0+dd)
                plt.plot([x0-dd, x0+dd], y,'r',linewidth=0.5)
                angle_list.append(get_angle(x0, y0, wt_x_10MW[n], wt_y_10MW[n]))
    # plt.show()
    # plt.legend()
    plt.savefig('yaw_rose')


wt9_x = np.array(wt_x_10MW)[[1, 2, 3, 4, 5, 6, 8, 9, 10]]
wt9_y = np.array(wt_y_10MW)[[1, 2, 3, 4, 5, 6, 8, 9, 10]]
i16 = [1,2,3,4,5,6,7,8,9,10,11,13,14,15,16]
wt16_x = np.array(wt_x_10MW)[i16]
wt16_y = np.array(wt_y_10MW)[i16]


power_curve = np.array([[3.0, 0.0],
                        [4.0, 66.6],
                        [5.0, 154.0],
                        [6.0, 282.0],
                        [7.0, 460.0],
                        [8.0, 696.0],
                        [9.0, 996.0],
                        [10.0, 1341.0],
                        [11.0, 1661.0],
                        [12.0, 1866.0],
                        [13.0, 1958.0],
                        [14.0, 1988.0],
                        [15.0, 1997.0],
                        [16.0, 1999.0],
                        [17.0, 2000.0],
                        [18.0, 2000.0],
                        [19.0, 2000.0],
                        [20.0, 2000.0],
                        [21.0, 2000.0],
                        [22.0, 2000.0],
                        [23.0, 2000.0],
                        [24.0, 2000.0],
                        [25.0, 2000.0]]) * [1, 1000]

ct_curve= ([[ 4.   ,  0.923],
       [ 5.   ,  0.919],
       [ 6.   ,  0.904],
       [ 7.   ,  0.858],
       [ 8.   ,  0.814],
       [ 9.   ,  0.814],
       [10.   ,  0.814],
       [11.   ,  0.814],
       [12.   ,  0.577],
       [13.   ,  0.419],
       [14.   ,  0.323],
       [15.   ,  0.259],
       [16.   ,  0.211],
       [17.   ,  0.175],
       [18.   ,  0.148],
       [19.   ,  0.126],
       [20.   ,  0.109],
       [21.   ,  0.095],
       [22.   ,  0.084],
       [23.   ,  0.074],
       [24.   ,  0.066],
       [25.   ,  0.059]])

class DTU10MW(OneTypeWindTurbines):
    def __init__(self):
        OneTypeWindTurbines.__init__(self, 'DTU10MW', diameter=178.3, hub_height=119,
                                     ct_func=self._ct, power_func=self._power, power_unit='W')

    def _ct(self, u):
        return np.interp(u, ct_curve[:, 0], ct_curve[:, 1])

    def _power(self, u):
        return np.interp(u, power_curve[:, 0], power_curve[:, 1])


Borkumriffgrund1DTU10MW = DTU10MW

#f, a, k are not updated for BKR01
class Borkumriffgrund1Site(UniformWeibullSite):
    def __init__(self, shear=None, normalize_probabilities=False):
        f = [3.597152, 3.948682, 5.167395, 7.000154, 8.364547, 6.43485,
             8.643194, 11.77051, 15.15757, 14.73792, 10.01205, 5.165975]
        a = [9.176929, 9.782334, 9.531809, 9.909545, 10.04269, 9.593921,
             9.584007, 10.51499, 11.39895, 11.68746, 11.63732, 10.08803]
        #scale up with power law
        a  = [element * 1.111 for element in a]
           
        k = [2.392578, 2.447266, 2.412109, 2.591797, 2.755859, 2.595703,
             2.583984, 2.548828, 2.470703, 2.607422, 2.626953, 2.326172]
        UniformWeibullSite.__init__(self, f, a, k, .1, shear=shear, normalize_probabilities=normalize_probabilities)
        self.initial_position = np.array([wt_x_10MW, wt_y_10MW]).T


# def main():
#     wt = DTU10MW()
#     print('Diameter', wt.diameter())
#     print('Hub height', wt.hub_height())
#     ws = np.arange(4, 25)
#     import matplotlib.pyplot as plt
#     plt.plot(ws, wt.power(ws), '.-')
#     plt.show()


# if __name__ == '__main__':
#     main()
